{"version":3,"sources":["components/personsServices.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","components/helpers.js","components/App.js","index.js"],"names":["apiURL","Filter","onChangeSearchTerm","searchTerm","onChange","value","PersonForm","name","phone","onChangeName","onChangePhone","onSubmit","Persons","persons","onDeletePerson","map","person","i","key","number","onClick","id","Notification","msg","className","type","content","lowerCase","input","toLowerCase","getPerson","newName","find","App","initalMessage","useState","setPersons","setNewName","newPhone","setNewPhone","setSearchTerm","message","setMessage","useEffect","axios","get","then","response","data","objects","filter","obj","includes","filterObjects","catch","err","console","log","setTimeout","e","target","preventDefault","window","confirm","thePerson","updatedPerson","put","updatePhoneNumber","returnedPerson","newPerson","post","concat","delete","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb5db421.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiURL = \"/api/persons\";\r\n\r\nconst getAllPersons = () => {\r\n  const request = axios.get(apiURL);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst addPerson = (newPerson) => {\r\n  const request = axios.post(apiURL, newPerson);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst updatePhoneNumber = (id, updatedPerson) => {\r\n  const request = axios.put(`${apiURL}/${id}`, updatedPerson);\r\n  return request.then((response) => response.data);\r\n};\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${apiURL}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport { getAllPersons, addPerson, deletePerson, updatePhoneNumber };\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ onChangeSearchTerm, searchTerm }) => (\r\n  <div>\r\n    Filter by:\r\n    <input onChange={onChangeSearchTerm} value={searchTerm} />\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({ name, phone, onChangeName, onChangePhone, onSubmit }) => (\r\n  <form onSubmit={onSubmit}>\r\n    <div>\r\n      name: <input value={name} onChange={onChangeName} />\r\n    </div>\r\n    <div>\r\n      phone: <input value={phone} onChange={onChangePhone} />\r\n    </div>\r\n    <div>\r\n      <button>add</button>\r\n    </div>\r\n  </form>\r\n);\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ persons, onDeletePerson }) => (\r\n  <ul>\r\n    {persons.map((person, i) => (\r\n      <li key={`${person.name} ${i}`}>\r\n        <span>\r\n          {person.name} {person.number}\r\n        </span>\r\n        <button onClick={() => onDeletePerson(person.id)}>delete</button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst Notification = ({ msg }) => {\r\n  return (\r\n    <div className={msg.type === \"error\" ? \"error\" : \"success\"}>\r\n      <p>{msg.content}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","export const lowerCase = (input) => input.toLowerCase();\r\n\r\nexport const getPerson = (persons, newName) =>\r\n  persons.find((person) => lowerCase(person.name) === lowerCase(newName));\r\n\r\nexport const filterObjects = (objects, searchTerm) =>\r\n  objects.filter((obj) => lowerCase(obj.name).includes(lowerCase(searchTerm)));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  getAllPersons,\r\n  addPerson,\r\n  deletePerson,\r\n  updatePhoneNumber,\r\n} from \"./personsServices\";\r\nimport Filter from \"./Filter\";\r\nimport PersonForm from \"./PersonForm\";\r\nimport Persons from \"./Persons\";\r\nimport Notification from \"./Notification\";\r\nimport { getPerson, filterObjects } from \"./helpers\";\r\n\r\nconst App = () => {\r\n  let initalMessage = { type: \"\", content: \"\" };\r\n\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newPhone, setNewPhone] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [message, setMessage] = useState(initalMessage);\r\n\r\n  useEffect(() => {\r\n    getAllPersons()\r\n      .then((persons) => {\r\n        setPersons(filterObjects(persons, searchTerm));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    if (message.type) {\r\n      setTimeout(() => {\r\n        setMessage(initalMessage);\r\n      }, 2000);\r\n    }\r\n  }, [searchTerm, message]);\r\n\r\n  const changeName = (e) => setNewName(e.target.value);\r\n  const changePhone = (e) => setNewPhone(e.target.value);\r\n  const changeSearchTerm = (e) => setSearchTerm(e.target.value);\r\n\r\n  const addName = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (getPerson(persons, newName)) {\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to phonebook. Want to update their phone's number?`\r\n        )\r\n      ) {\r\n        const thePerson = getPerson(persons, newName);\r\n        const updatedPerson = { ...thePerson, number: newPhone };\r\n\r\n        updatePhoneNumber(thePerson.id, updatedPerson)\r\n          .then((returnedPerson) => {\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id !== returnedPerson.id ? person : returnedPerson\r\n              )\r\n            );\r\n            setMessage({\r\n              type: \"success\",\r\n              content: `${newName}'s phone number was add successfully updated.`,\r\n            });\r\n          })\r\n          .console.log((err) => {\r\n            console.log(err);\r\n            console.log(err.response);\r\n          });\r\n      }\r\n    } else {\r\n      addPerson({ name: newName, number: newPhone })\r\n        .then((newPerson) => {\r\n          setPersons(persons.concat(newPerson));\r\n          setNewName(\"\");\r\n          setNewPhone(\"\");\r\n          setMessage({\r\n            type: \"success\",\r\n            content: `${newName} was add successfully your notebook.`,\r\n          });\r\n        })\r\n        .console.log((err) => {\r\n          console.log(err);\r\n          console.log(err.response);\r\n        });\r\n    }\r\n  };\r\n  const delPerson = (id) => {\r\n    if (window.confirm(\"You sure you want to delete this person?\")) {\r\n      deletePerson(id)\r\n        .then((response) => {\r\n          setPersons(persons.filter((person) => person.id !== id));\r\n          setMessage({\r\n            type: \"success\",\r\n            content: `Successfully deleted.`,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          setMessage({\r\n            type: \"error\",\r\n            content:\r\n              \"The person you're trying to delete has already been removed from the server.\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Filter searchTerm={searchTerm} onChangeSearchTerm={changeSearchTerm} />\r\n\r\n      <h3>Add New Person</h3>\r\n      <PersonForm\r\n        name={newName}\r\n        phone={newPhone}\r\n        onChangeName={changeName}\r\n        onChangePhone={changePhone}\r\n        onSubmit={addName}\r\n      />\r\n\r\n      <h3>Numbers</h3>\r\n      <Persons persons={persons} onDeletePerson={delPerson} />\r\n\r\n      {message.type && <Notification msg={message} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}